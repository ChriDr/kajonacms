Module System

V4.5 ----------------------------------------------------------------------------------------------------
NEW: module_system | request-dispatcher -> added a new param blockAction. if set (in combination with peClose=1), the current request skips the action() call and sends the location.reload directive directly
NEW: module_system | class_rights -> added method filterObjectsByRight
NEW: module_system | class_module_system_setting-> added method which returns a value of a given config
NEW: module_system | functions.php -> changed validateSytemid() to a non-regex implementation based on ctype_alnum(). slightly faster than using a regex.
NEW: module_system | dblayer -> added a base class for db drivers [ticket #899]
NEW: module_system | db-layer -> moved the column data-types to a list of constants in the namespace class_db_datatypes
NEW: module_system | class_db -> added a new method / interface method multiInsert, used to add mutliple rows within a singe query. special mehod required since some databases require a special syntax
NEW: module_system | templatemapper -> added a new class_template_mapper. Will be used to map objects to portal-templates automatically. Therefore all properties marked with @templateExport will be available in the template. If @templateMapper [name] is given, the named mapper will be used to format / transform the value before writing it into the template. [ticket #684]
NEW: module_system | changelog -> fixed the usage of self::$bitChangelogEnabled in order to have the determination cached. removed a legacy support for named versionable properties since not used anywhere but causing a massive slowdown
NEW: module_system | changelog -> added a static flag to enable / disable the changehistory manually.
NEW: module_system | lockmanager -> if an user logs out, all locks for the current user are released [ticket #896]
NEW: module_system | class_classloader -> The classloader got a new method includeClasses(), used by the kernel to include classes matching the pattern "class_module_" at system startup. This ensures that static init blocks are processed. class_carrier triggers the inclusion on getInstance(). In addition, class_carrier triggers the kernel startup automatically, calling it manually is no longer necessary.
NEW: module_system | filesystem layout -> A new config-file located at /project/system/config/excludedmodules.php, containing an array $arrExcludedModules may be used to exclude certain modules from the class- / resourceloader (so acting the same as deleting the listed modules from the filesystem). the excludemodules.php config file uses different arrays per core-folder
NEW: module_system | filesystem layout -> The kernel is now aware of multiple core directories. Therefore the class- and resource-loaders have been updated in order to search and index each core directory. The resource loader got two new methods getCorePathForPath() and getCorePathForModule(), used to query the core-location of the passed file / module. The packagemanager is capable of handling multiple core directories, too.
NEW: module_system | installer -> Added a new base-class class_elementinstaller_base, to be used by packages only cotnaining an element. Implements all relevant methods in order to add remove-support to element-packages. [ticket #835]
NEW: module_system | image.php -> on-the-fly resizing is allowed for images placed in /templates, too
NEW: module_system | class_root -> setting an invalid value as a prev-id (e.g. "abc") is no longer possible. when passed to updateObjectToDb, an excpetion is thrown. [ticket #889]
NEW: module_system | class_session -> added two new events: "core.system.userlogout" and "core.system.userlogin". fired when a user logs into the system or if the user logs out of the system. listen on those events if you want to trigger additional actions.
NEW: module_system | class_session -> changed the way how internal sessions are inserted initially into the database. the insert is triggered on destruct, so the latest possible point is used. this allows methods to skip the session update for special cases and avoids senseless insert-queries
NEW: module_system | systeminfo -> extracted the systeminfo-contents from class_module_system_common to its own plugins, making it maintainable again
NEW: module_system | toolkit -> allow overwriting class_toolkit_portal via project folder
NEW: module_system | class_filesystem -> getFileList supports an optional recursive mode
NEW: module_system | kajona.js-> method renderMissingMandatoryFields now additionally handles fields which are mandatory and empty
NEW: module_system | admin view -> Added a new action "lockedRecords", listing all records currently locked by a user. Each record may be unlocked.
NEW: module_system | class_zip -> added a method which checks if the given file is a zip-File
NEW: module_system | class_zip -> added an additional flag to create an archive when opening a zip-file for writing
NEW: module_system | systemtask admin view -> a task can now be exectued directly without popup dialogue
NEW / APICHANGE: module_system | eventhandling -> added a complete new way of event-handling to the Kajona core. The old implementation was based on real listener-interface, making a real decoupling of modules impossible. If the tags-module wanted to provide an optional listener for search-events, the tag modul either required the search module as a hard dependency or the listener-interface had to be located at module system (and therefore was available at any time). The new implementation is based on a generic listener-interface interface_genericevent_listener in combination with a event-identifier. Listeners are registered at class_core_eventdispatcher for given event-ids. As soon as an object triggers a notify identified by the event-id, all registered listeners will be updated using a generic callback-method. The callback-method takes the event-id and an array of optional values as params. The identifier-based implementation now provides a fully decoupled event-mechanism. #876
NEW: module_system | pluginmanager -> added a new, lightweight plugin-mechanism. plugins implementing interface_generic_plugin return the string-based named of an "extension point". in combination, class_pluginmanager may load and instantiate all objects implementing the interface and matching a queried extension point. Could replace the more complex admin-plugin manager for cases where the full functionality is not necessary.
NEW: module_system | db backup task -> added search index tables to list of excluded tables when dumping tables
NEW: module_system | formgenerator -> it is now possible to set the enctype on the formObject
NEW: module_system | formgenerator -> an optional on-submit handler may be added to a form generated by the form-manager
NEW: module_system | formgenerator -> if null is passed as the target action to the formgenerator, no form-tags will be rendered. useful if the form-tags are generated later or earlier
NEW: module_system | formgenerator -> pressing "save/submit" multiple times no longer triggers the new / save action multiple times [ticket #895]. implemented using the forms onSubmit handler.
NEW: module_system | formgenerator -> added method getting the formname
NEW: module_system | formgenerator -> if a record is locked it is now displayed which user has locked that record
NEW: module_system | formentries -> added a new formentry "autoheadline", generated based on a properties' value. old entry "headline" remains due to
NEW: module_system | formentries -> added a new formentry for uploading documents backwards compatibility and different use-cases
NEW: module_system | base class test -> added new param for method createObject with which it is possible to set attributes manually
BUG: module_system | kajona.js -> the captcha is only reloaded / added if the container is present
BUG: module_system | formgenerator -> the formgenerator skips locks for objects with no systemid
BUG: module_system | formgenerator -> the buttons generated by the form-generator are named with a suffix btn, avoiding conflicts with form-properties such as form.submit
BUG: module_system | lang-files -> language files found in the project folder are merged into the lang array, even if there's no identically named file in the /core folder
BUG: module_system | class_link -> popup links could be rendered with tooltips even for cases where the link text and the tooltip text were identical
BUG: module_system | array iterator -> fixed a possible indexOutOfBounds exception in class_array_section_iterator. could occur if the current pages has less elements as expected during initialization of the iterator
BUG: module_system | image-plugins -> the image text-plugin used a wrong font-path, therefore text-operations failed (e.g. when rendering a captcha image)
BUG: module_system | image-plugins -> Background of transparent PNG is set to black on image operations [ticket #893]
BUG: module_system | class_csv -> when streaming csv files directly to the browser, the headers were sent after the content
BUG: module_system | class_root -> when copying a record, the internal init-row is reset, too. otherwise some meta-info (e.g. the create date) was not updated correctly
BUG: module_system | class_exception -> The history stacks (portal and admin) were loaded using a wrong session access code, resulting in empty histories
BUG: module_system | class_date -> changed order of if statemens so that int params with value 0 are handled correctly. Added new method to class test_class_dateTest for checking class_date
BUG: module_system | class_module_system_common -> copySystemrecord() missed a column for the rights-table
BUG: module_system | class_cookie -> Fixed a cookies' path to avoid problems with different paths if mod_rewrite is enabled
BUG / SECURITY: module_system | class_link -> fixed some rare conditions where a possible xss injection was possible for the systemid-param

V4.4.4 --------------------------------------------------------------------------------------------------
BUG / SECURITY: class_link -> fixed some rare conditions where a possible xss injection was possible for the systemid-param

V4.4.3 --------------------------------------------------------------------------------------------------
BUG: portal link generation could skip the systemid if passed as an additional param instead of passing it as the named systemid param

V4.4.2 --------------------------------------------------------------------------------------------------
BUG: the image text-plugin used a wrong font-path, therefore text-operations failed (e.g. when rendering a captcha image)

V4.4.1 --------------------------------------------------------------------------------------------------
BUG: mail-notifications sent by the messaging subsystem could use a wrong recipient for cases where the mail-sender was set explicitly

V4.4 ----------------------------------------------------------------------------------------------------
NEW: added new method which gets all subnodes of a given node recursively
NEW: class_date accepts instances of class_date as a constructor param
NEW: if an object is copied and the object provides a title-property, the framework adds _copy to the new instances title. Otherwise, source and copy-objects could not be distinguished.
NEW: removed the (deprecated since 4.0) form-validation methods from class_admin
NEW: added a common base class for admin / portal views, class_ui_base. Reduces copied code-fragments #871
NEW: finally, the reference to class_db at class_ui_base is removed. the (deprecated since 4.0) access is no longer possible.
NEW: moved many listener-callbacks to their own objects, reducing the size of many model-classes #872
NEW: added class_history, a new central class to manage the history stacks of both, backend and portal requests of the current session (was located at class_admin / class_portal before). The stack is filled by the request-dispatcher, reducing the number of session-updated per request.
NEW: changes in field validation: All Fields are now validated (even if they are not mandatory). Mandatory fields cannot be empty anymore
NEW: added new interface which extends the interface interface_validator. This new interface contains a method which returns a validation message for this field
NEW: properties may be parametrized. A parameter is added to a property using the common java-syntax, e.g. "hello my {0}". Pass replacements ins an optional array. #840
NEW: the captcha image is also generated by class_image2. this means that the last remaining parts relying on class_image are now removed. class_image will remain at least until v 4.5 to remain backwards compatibility. #784
NEW: the debug-info is added as valid html for web-requests. on xml-/json-requests, the debug-info is added as an additional http-header (not polluting the real output)
NEW: the backend-template path-determination was moved to class_resourceloader. this ensures the caching is only done once.
NEW: class_session caches the current skin and backend language in the session. performance boost.
NEW: class_resourceloader caches admin-templates, too. performance boost.
NEW: the backend module navigation is build on the module-objects instead of the admin-obejcts. this reduces the number of object-initializations drastically as soon as the navigation-parts are generated and cached on first load. performance boost.
NEW: generic ajax call method: if an error is thrown the call back will also be called
NEW: Refactored the event-dispatcher. The implementation is now generic, so the listener-interfaces are no longer hardcoded. This means, event-interface may be provided by every module. Added some unit-tests to verify the functionality.
NEW: if a record is being copied, the progress itself is indicated by a loading animation
NEW: introduces a new permission "changelog" (the first new permission for 9 years :) ). Hidden by default, the permission may be used to control which groups are allowed to view the changelog of a record independent from the objects view/edit permissions. #847
NEW: the admin-url redirects to the installer if the system is not yet installed, too (now the same behaviour like the portal calls)
NEW: Object-Locks are respected when setting an objects' sort-position
NEW: checkbox_formentry: it is now possible to disable a check box
NEW: added new formentry which creates a On-Off-Toggle button using bootstrap-switch (www.bootstrap-switch.org)
NEW: added new form entry which contains two drop down boxes, one for month and one for year
NEW: added a callback to class_admin onRenderOutput(), useful to inject elements into the rendered backend-page
APICHANGE: the force-param of class_lockmanager::unlockRecord unlocks the locked record in every case, even if the user is no member of the admin group
APICHANGE: removed some methods in class_admin marked as deprecated since 4.0
APICHANGE: removed class_(root|admin|portal) getStatus, deprecated since 4.0. setStatus will follow. use (set|get)IntRecordStatus instead
BUG: the system_changelog restorer no longer triggers a hidden updateObjectToDb, e.g. due to setting the record-status of a record (field is set to ignore)
BUG: on 32bit systems, some long values could be truncated due to an uncecked int / long / float cast
BUG: the url to be loaded after deleting a record is now checked to not match the deleted records system-id. this could have lead to exceptions due to a record no longer existing.
BUG: moving a formentry to the list of hidden elements validates if the element was added to the list of visible elements twice
BUG: class_image2 missed to send the headers before starting to stream the image itself
BUG: flushing the resourceloaders' cache flushes the static caches, too (and not only the filesystem-based caches)
BUG: the response-code for exception was not set to 500 for some cases
BUG: the formmanager skips object-locks if a new record is created. when editing existing records, the locks are set as before. locking new objects could lead to locks on the prev-id, resulting in locked module-objects waiting for the lock-timeout.
BUG: the order of child-records could be mixed up when copying an object. ART#829


V4.3 ----------------------------------------------------------------------------------------------------
NEW: Added annotations @module, @moduleId for module and moduleId declarations. makes constructors obsolete in many cases. #830
NEW: the wysiwygsmall formentry allows images and links to be placed in the content
NEW: added a new annotation @fieldHidden for formentries. if set, the entry is rendered in the optional-elements section of the form.
NEW: chart-engines are instantiated dynamically, no longer hardcoded calls #836
NEW: class_resourceloader::getFolderContent is able to filter the list of files being returned using a callback-method. the callback is passed to array_filter, so the same syntax and behaviour is applied
NEW: added a new formentry "plaintext" to inject code like js-fragments into forms
NEW: updated jQuery to 1.10.2
NEW: moved the admintask-js logic to own, static methods. may be used by other classes to reduce the amount of copy n paste code.
NEW: optimized the systemtask-list rendering, a tasks' admin-form is only generated in case the task is really executed.
NEW: added task / batch processing based class_image2. will replace class_image.
NEW: Pluginmanager for admin plugins implementing interface_admin_plugin.
NEW: added the class class_module_system_changelog_restorer, used to restore single values from the changelog back to the linked object
NEW: added a method containsSection to class_template in order to validate the presence of a section within a template
NEW: the generic actionList @ class_admin_evensimpler creates a list-identifier (listTypename)  by default
NEW: the changelog may be temporary disabled to speed up script execution
NEW: settings are cached internally, reducing the amount of queries per request
NEW: class_date supports setNext/PreviousMonth/Week
NEW: systemtask-executions are logged with level WARNING to their own logfile
NEW: introduced a new annotation "@fieldDDValues", relevant for dropdown admin-form entries. The value is a list of [key=>value],[key=>value] pairs, resolved from the language-files. This makes it obsolete to pass the language-file based options programmatically
NEW: class_link, replacing all link-functions in functions.php. getLinkAdminRaw is replaces by (nearly identical) getLinkAdminManual
NEW: added system time info to systemInfo view
NEW: A custom error-message in case of validation-errors may be provided to formentries. If not given, the label is still being used instead.
NEW: added an integer-validator
NEW: added javascript function KAJONA.v4skin.appendLinkToPathNavigation. adds a simple link to the currents page path-navigation.
NEW: when including a config file fails, the name of the file is printed in every case
NEW: the adminform-handler tries to load the values from the params even if there is no passed source-object
NEW: folderview-based actions (so dialogs) are not added to the history-stack
BUG: when the validation of an evensimpler form failed, the systemid could get lost. the resulted in records with a wrong prev-id
BUG: tags are stripped from an objects display-name when throwing exceptionsBUG: the mail action of module system missed to url-decode params before rendering the values
BUG: fixed the urlencoding of the image-cropper cross links
BUG: The sort-criteria for generic select-statements was skipped in case the @listOrder annotation used only the column name (without the table name)
BUG: some filesystem operation replace a possible _realpath_ part of the passed filename. otherwise some cache-flushing methods fail and could lead to a corrupt cache on package installs / updates.
BUG: the core event-dispatcher cached some instances using the wrong static variable
BUG: null-values could have been replaced with empty strings before passing them to the db-driver. this caused problems on some dbms like postgres
BUG: changed the way the wysiwyg is initialized. this avoids problems with div-tags named the same as some backend-skin css classes / ids.
BUG: the automatic aspect-changer is only triggered, if the target aspect is visible



V4.2 ----------------------------------------------------------------------------------------------------
NEW: added a new form-entry "user", used to select a user from the user-management, includes autocomplete. Therefore the old toolkit-user selector was updated to the latest jqueryUI changes.
NEW: added a new interface "interface_formentry_printable", extending the interface_formentry. By adding a method "getValueAsText", form-entries may be used to generate a "read only" or a summary view of a single object / form
NEW: before sending a generated update-query to the database, int/bit property values are casted explicitly. Required by some RDBMS.
NEW: added an image-mapper for the backend-skins. The mapper is expected for each skin, named class_adminskin_imageresolver (implementing interface_adminskin_imageresolver). The imageresolver transforms names like "icon_edit" into a matching img-tag or an i-tag, as used by the current skin. #804
NEW: added formentry textrow, usable to render a hint without a matching form-element
NEW: more typesafety on date getters / setters in class_root
NEW: the backend navigation entries are cached per aspect, this allows a module to render different actions depending on the current aspect
NEW: module-id files may use an additional underscore
NEW: added class_admin_formgenerator::removeField() to remove an already added entry from a form
BUG: system-changelog missed the ORDER BY criteria for a merged resultset
BUG: when rendering a list via class_admin_evensimpler, the original action is restored temporarily. Otherwise the page rendered below the list of records would use "list" for every object-type, resulting in a broken paging-link/erroneous link.
BUG: the new, decoupled image generation missed to keep the image ratio
BUG: fixed session close error during image generation
BUG: some special chars could create broken dialog-links in the backend. #805
BUG: the lang-scriptlet missed to register for the context 'portal-page'. this could lead to scriptlet-placeholder not being replaced in case of xml requests.
BUG: admin-formgenerator passes null for empty dates instead of an empty string
BUG: language-files may contain additional underscores for the module-part
BUG: reenabled the system-config "admintoolkit". The specified class-name is evaluated and resolved correctly.
BUG: double-slashes are removed from paths resolved by class_resourceloader